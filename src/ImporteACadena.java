//@author KevinCaballero
public class ImporteACadena extends javax.swing.JFrame {
    public ImporteACadena() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        accion = new javax.swing.JButton();
        importe = new javax.swing.JTextField();
        cadenatxt = new javax.swing.JTextField();
        lbl_importe = new javax.swing.JLabel();
        lbl_cadena = new javax.swing.JLabel();
        lbl_titulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Importe a Cadena");
        setResizable(false);

        accion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        accion.setText("Convertir");
        accion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionActionPerformed(evt);
            }
        });

        importe.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        importe.setToolTipText("");

        cadenatxt.setEditable(false);
        cadenatxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lbl_importe.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_importe.setText("Importe:");

        lbl_cadena.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_cadena.setText("Cadena:");

        lbl_titulo.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        lbl_titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_titulo.setText("Importe a Cadena");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_importe)
                    .addComponent(lbl_cadena))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadenatxt)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbl_titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(146, 146, 146))
                    .addComponent(importe, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(419, 419, 419)
                .addComponent(accion)
                .addContainerGap(430, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lbl_titulo)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_cadena)
                        .addComponent(cadenatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(importe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_importe))
                        .addGap(35, 35, 35)))
                .addComponent(accion)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void accionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionActionPerformed
        String[] primeros = {"CERO","UNO","DOS","TRES","CUATRO","CINCO","SEIS",
        "SIETE","OCHO","NUEVE","DIEZ","ONCE","DOCE","TRECE","CATORCE","QUINCE",
        "DIECISEIS","DIECISIETE","DIECIOCHO","DIECINUEVE","VEINTE","VENTIUNO",
        "VEINTIDOS","VEINTITRES","VEINTICUATRO","VEINTICINCO","VEINTISEIS",
        "VEINTISIETE","VEINTIOCHO","VEINTINUEVE"};
        
        String[] decenas = {"","","VEINTI","TREINTA","CUARENTA","CINCUENTA","SESENTA","SETENTA",
        "OCHENTA","NOVENTA"};
        
        String[] centenas = {"","CIENTO","DOSCIENTOS","TRESCIENTOS","CUATROSCIENTOS",
        "QUINIENTOS","SEISCIENTOS","SETECIENTOS","OCHOCIENTOS","NOVECIENTOS"};
        
        String[] cadena = {"","","","","","","","","","","","","","","","","","","","","","","","",""};
     
        int num;
        int unidad;
        int decena;
        int centena;
        int milesima;
        int decimales;
        double n;
        n = Double.parseDouble(importe.getText());
        decimales = (int)(n*100)%100;
        if (n==0) {
            cadena[0] = primeros[(int)n]+"";
        }
        if (n>=1000  && n<1000000) {
            milesima = (int)(n-n%1000)/1000;
            if (milesima<30 && milesima>1) {
                if (milesima==21) {
                    cadena[1] = "VEINTIUN";
                } else {
                    cadena[2] = primeros[milesima]+"";
                }
            }
            if (milesima>=30 && milesima<100) {
                decena = (int)(milesima-milesima%10)/10;
                cadena[3] = decenas[decena]+"";
                unidad = (int)(milesima%10);
                if (unidad==1) {
                    cadena[4] = " Y UN";
                }
                if(unidad>1){
                    cadena[5] = " Y "+primeros[unidad];
                }
            }
            if (milesima>=100 && milesima<1000) {
                if (milesima==100) {
                    cadena[6] = "CIEN";
                } else {
                    centena = (int)(milesima-milesima%100)/100;
                    cadena[7] = centenas[centena]+" ";
                    milesima=milesima%100;
                    if (milesima<30 && milesima>1) {
                        if (milesima==21) {
                            cadena[8] = "VEINTIUN";
                        } else {
                            cadena[9] = primeros[milesima]+"";
                        }
                    } else {
                        decena = (int)(milesima-milesima%10)/10;
                        cadena[10] = decenas[decena]+"";
                        unidad = (int)(milesima%10);
                        if (unidad==1) {
                            cadena[11] = " Y UN";
                        }
                        if(unidad>1){
                            cadena[12] = " Y "+primeros[unidad];
                        }
                    }
                }
            }
            cadena[13] = " MIL ";
            n=n%1000;
        }
        if (n<30 && n>0) {
            cadena[14] = primeros[(int)(n)]+"";
        }
        if (n>=30 && n<100) {
            decena = (int)(n-n%10)/10;
            cadena[15] = decenas[decena]+"";
            unidad = (int)(n%10);
            if(unidad!=0){
                cadena[16] = " Y "+primeros[unidad];
            }
        }
        if (n>=100 && n<1000) {
            if(n==100){
                cadena[17] = "CIEN";
            } else {
                centena = (int)(n-n%100)/100;
                cadena[18] = centenas[centena]+" ";
                n=n%100;
                if (n<30 && n!=0) {
                    cadena[19] = primeros[(int)(n)]+"";
                } else {
                    decena = (int)(n-n%10)/10;
                    cadena[20] = decenas[decena]+"";
                    unidad = (int)(n%10);
                    if(unidad!=0){
                        cadena[21] = " Y "+primeros[unidad];
                    }
                }
            }
        }
        if (n>=0 && n<1000000) {
            if (decimales>=10) {
                cadena[22] = " CON "+decimales+"/100 M.N.";
            } 
            else {
                cadena[23] = " CON 0"+decimales+"/100 M.N.";
            }
            for (int i = 0; i < cadena.length-1; i++) {
                cadena[24]=cadena[24]+cadena[i];
            }
        } else {
            cadena[24]="Numero incorrecto, solo se acepta del 0.00 al 999999.99";
        }
        cadenatxt.setText(cadena[24]);
    }//GEN-LAST:event_accionActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImporteACadena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImporteACadena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImporteACadena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImporteACadena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImporteACadena().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accion;
    private javax.swing.JTextField cadenatxt;
    private javax.swing.JTextField importe;
    private javax.swing.JLabel lbl_cadena;
    private javax.swing.JLabel lbl_importe;
    private javax.swing.JLabel lbl_titulo;
    // End of variables declaration//GEN-END:variables
}
